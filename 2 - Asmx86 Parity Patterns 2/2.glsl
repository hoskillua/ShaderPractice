
// checks the parity in the lowest byte
bool parity(int x){
    bool c = true;
    for(int i = 0; i < 8; i++){
        if (x % 2 != 0)
            c != c;
        x >>= 1;
    }
    return c;
}

void mainImage( out vec4 fragColor, in vec2 fragCoord )
{
     // asm 86 VGA 256 color palette (check python script here)
     const vec3 asm86palette[256] = vec3[256](
        vec3(0.0, 0.0, 0.0),
        vec3(0.0, 0.0, 0.6666666666666666),
        vec3(0.0, 0.6666666666666666, 0.0),
        vec3(0.0, 0.6666666666666666, 0.6666666666666666),
        vec3(0.6666666666666666, 0.0, 0.0),
        vec3(0.6666666666666666, 0.0, 0.6666666666666666),
        vec3(0.6666666666666666, 0.3333333333333333, 0.0),
        vec3(0.6666666666666666, 0.6666666666666666, 0.6666666666666666),
        vec3(0.3333333333333333, 0.3333333333333333, 0.3333333333333333),
        vec3(0.3333333333333333, 0.3333333333333333, 1.0),
        vec3(0.3333333333333333, 1.0, 0.3333333333333333),
        vec3(0.3333333333333333, 1.0, 1.0),
        vec3(1.0, 0.3333333333333333, 0.3333333333333333),
        vec3(1.0, 0.3333333333333333, 1.0),
        vec3(1.0, 1.0, 0.3333333333333333),
        vec3(1.0, 1.0, 1.0),
        vec3(0.0, 0.0, 0.0),
        vec3(0.06274509803921569, 0.06274509803921569, 0.06274509803921569),
        vec3(0.12549019607843137, 0.12549019607843137, 0.12549019607843137),
        vec3(0.20784313725490197, 0.20784313725490197, 0.20784313725490197),
        vec3(0.27058823529411763, 0.27058823529411763, 0.27058823529411763),
        vec3(0.3333333333333333, 0.3333333333333333, 0.3333333333333333),
        vec3(0.396078431372549, 0.396078431372549, 0.396078431372549),
        vec3(0.4588235294117647, 0.4588235294117647, 0.4588235294117647),
        vec3(0.5411764705882353, 0.5411764705882353, 0.5411764705882353),
        vec3(0.6039215686274509, 0.6039215686274509, 0.6039215686274509),
        vec3(0.6666666666666666, 0.6666666666666666, 0.6666666666666666),
        vec3(0.7294117647058823, 0.7294117647058823, 0.7294117647058823),
        vec3(0.792156862745098, 0.792156862745098, 0.792156862745098),
        vec3(0.8745098039215686, 0.8745098039215686, 0.8745098039215686),
        vec3(0.9372549019607843, 0.9372549019607843, 0.9372549019607843),
        vec3(1.0, 1.0, 1.0),
        vec3(0.0, 0.0, 1.0),
        vec3(0.2549019607843137, 0.0, 1.0),
        vec3(0.5098039215686274, 0.0, 1.0),
        vec3(0.7450980392156863, 0.0, 1.0),
        vec3(1.0, 0.0, 1.0),
        vec3(1.0, 0.0, 0.7450980392156863),
        vec3(1.0, 0.0, 0.5098039215686274),
        vec3(1.0, 0.0, 0.2549019607843137),
        vec3(1.0, 0.0, 0.0),
        vec3(1.0, 0.2549019607843137, 0.0),
        vec3(1.0, 0.5098039215686274, 0.0),
        vec3(1.0, 0.7450980392156863, 0.0),
        vec3(1.0, 1.0, 0.0),
        vec3(0.7450980392156863, 1.0, 0.0),
        vec3(0.5098039215686274, 1.0, 0.0),
        vec3(0.2549019607843137, 1.0, 0.0),
        vec3(0.0, 1.0, 0.0),
        vec3(0.0, 1.0, 0.2549019607843137),
        vec3(0.0, 1.0, 0.5098039215686274),
        vec3(0.0, 1.0, 0.7450980392156863),
        vec3(0.0, 1.0, 1.0),
        vec3(0.0, 0.7450980392156863, 1.0),
        vec3(0.0, 0.5098039215686274, 1.0),
        vec3(0.0, 0.2549019607843137, 1.0),
        vec3(0.5098039215686274, 0.5098039215686274, 1.0),
        vec3(0.6196078431372549, 0.5098039215686274, 1.0),
        vec3(0.7450980392156863, 0.5098039215686274, 1.0),
        vec3(0.8745098039215686, 0.5098039215686274, 1.0),
        vec3(1.0, 0.5098039215686274, 1.0),
        vec3(1.0, 0.5098039215686274, 0.8745098039215686),
        vec3(1.0, 0.5098039215686274, 0.7450980392156863),
        vec3(1.0, 0.5098039215686274, 0.6196078431372549),
        vec3(1.0, 0.5098039215686274, 0.5098039215686274),
        vec3(1.0, 0.6196078431372549, 0.5098039215686274),
        vec3(1.0, 0.7450980392156863, 0.5098039215686274),
        vec3(1.0, 0.8745098039215686, 0.5098039215686274),
        vec3(1.0, 1.0, 0.5098039215686274),
        vec3(0.8745098039215686, 1.0, 0.5098039215686274),
        vec3(0.7450980392156863, 1.0, 0.5098039215686274),
        vec3(0.6196078431372549, 1.0, 0.5098039215686274),
        vec3(0.5098039215686274, 1.0, 0.5098039215686274),
        vec3(0.5098039215686274, 1.0, 0.6196078431372549),
        vec3(0.5098039215686274, 1.0, 0.7450980392156863),
        vec3(0.5098039215686274, 1.0, 0.8745098039215686),
        vec3(0.5098039215686274, 1.0, 1.0),
        vec3(0.5098039215686274, 0.8745098039215686, 1.0),
        vec3(0.5098039215686274, 0.7450980392156863, 1.0),
        vec3(0.5098039215686274, 0.6196078431372549, 1.0),
        vec3(0.7294117647058823, 0.7294117647058823, 1.0),
        vec3(0.792156862745098, 0.7294117647058823, 1.0),
        vec3(0.8745098039215686, 0.7294117647058823, 1.0),
        vec3(0.9372549019607843, 0.7294117647058823, 1.0),
        vec3(1.0, 0.7294117647058823, 1.0),
        vec3(1.0, 0.7294117647058823, 0.9372549019607843),
        vec3(1.0, 0.7294117647058823, 0.8745098039215686),
        vec3(1.0, 0.7294117647058823, 0.792156862745098),
        vec3(1.0, 0.7294117647058823, 0.7294117647058823),
        vec3(1.0, 0.792156862745098, 0.7294117647058823),
        vec3(1.0, 0.8745098039215686, 0.7294117647058823),
        vec3(1.0, 0.9372549019607843, 0.7294117647058823),
        vec3(1.0, 1.0, 0.7294117647058823),
        vec3(0.9372549019607843, 1.0, 0.7294117647058823),
        vec3(0.8745098039215686, 1.0, 0.7294117647058823),
        vec3(0.792156862745098, 1.0, 0.7294117647058823),
        vec3(0.7294117647058823, 1.0, 0.7294117647058823),
        vec3(0.7294117647058823, 1.0, 0.792156862745098),
        vec3(0.7294117647058823, 1.0, 0.8745098039215686),
        vec3(0.7294117647058823, 1.0, 0.9372549019607843),
        vec3(0.7294117647058823, 1.0, 1.0),
        vec3(0.7294117647058823, 0.9372549019607843, 1.0),
        vec3(0.7294117647058823, 0.8745098039215686, 1.0),
        vec3(0.7294117647058823, 0.792156862745098, 1.0),
        vec3(0.0, 0.0, 0.44313725490196076),
        vec3(0.10980392156862745, 0.0, 0.44313725490196076),
        vec3(0.2235294117647059, 0.0, 0.44313725490196076),
        vec3(0.3333333333333333, 0.0, 0.44313725490196076),
        vec3(0.44313725490196076, 0.0, 0.44313725490196076),
        vec3(0.44313725490196076, 0.0, 0.3333333333333333),
        vec3(0.44313725490196076, 0.0, 0.2235294117647059),
        vec3(0.44313725490196076, 0.0, 0.10980392156862745),
        vec3(0.44313725490196076, 0.0, 0.0),
        vec3(0.44313725490196076, 0.10980392156862745, 0.0),
        vec3(0.44313725490196076, 0.2235294117647059, 0.0),
        vec3(0.44313725490196076, 0.3333333333333333, 0.0),
        vec3(0.44313725490196076, 0.44313725490196076, 0.0),
        vec3(0.3333333333333333, 0.44313725490196076, 0.0),
        vec3(0.2235294117647059, 0.44313725490196076, 0.0),
        vec3(0.10980392156862745, 0.44313725490196076, 0.0),
        vec3(0.0, 0.44313725490196076, 0.0),
        vec3(0.0, 0.44313725490196076, 0.10980392156862745),
        vec3(0.0, 0.44313725490196076, 0.2235294117647059),
        vec3(0.0, 0.44313725490196076, 0.3333333333333333),
        vec3(0.0, 0.44313725490196076, 0.44313725490196076),
        vec3(0.0, 0.3333333333333333, 0.44313725490196076),
        vec3(0.0, 0.2235294117647059, 0.44313725490196076),
        vec3(0.0, 0.10980392156862745, 0.44313725490196076),
        vec3(0.2235294117647059, 0.2235294117647059, 0.44313725490196076),
        vec3(0.27058823529411763, 0.2235294117647059, 0.44313725490196076),
        vec3(0.3333333333333333, 0.2235294117647059, 0.44313725490196076),
        vec3(0.3803921568627451, 0.2235294117647059, 0.44313725490196076),
        vec3(0.44313725490196076, 0.2235294117647059, 0.44313725490196076),
        vec3(0.44313725490196076, 0.2235294117647059, 0.3803921568627451),
        vec3(0.44313725490196076, 0.2235294117647059, 0.3333333333333333),
        vec3(0.44313725490196076, 0.2235294117647059, 0.27058823529411763),
        vec3(0.44313725490196076, 0.2235294117647059, 0.2235294117647059),
        vec3(0.44313725490196076, 0.27058823529411763, 0.2235294117647059),
        vec3(0.44313725490196076, 0.3333333333333333, 0.2235294117647059),
        vec3(0.44313725490196076, 0.3803921568627451, 0.2235294117647059),
        vec3(0.44313725490196076, 0.44313725490196076, 0.2235294117647059),
        vec3(0.3803921568627451, 0.44313725490196076, 0.2235294117647059),
        vec3(0.3333333333333333, 0.44313725490196076, 0.2235294117647059),
        vec3(0.27058823529411763, 0.44313725490196076, 0.2235294117647059),
        vec3(0.2235294117647059, 0.44313725490196076, 0.2235294117647059),
        vec3(0.2235294117647059, 0.44313725490196076, 0.27058823529411763),
        vec3(0.2235294117647059, 0.44313725490196076, 0.3333333333333333),
        vec3(0.2235294117647059, 0.44313725490196076, 0.3803921568627451),
        vec3(0.2235294117647059, 0.44313725490196076, 0.44313725490196076),
        vec3(0.2235294117647059, 0.3803921568627451, 0.44313725490196076),
        vec3(0.2235294117647059, 0.3333333333333333, 0.44313725490196076),
        vec3(0.2235294117647059, 0.27058823529411763, 0.44313725490196076),
        vec3(0.3176470588235294, 0.3176470588235294, 0.44313725490196076),
        vec3(0.34901960784313724, 0.3176470588235294, 0.44313725490196076),
        vec3(0.3803921568627451, 0.3176470588235294, 0.44313725490196076),
        vec3(0.4117647058823529, 0.3176470588235294, 0.44313725490196076),
        vec3(0.44313725490196076, 0.3176470588235294, 0.44313725490196076),
        vec3(0.44313725490196076, 0.3176470588235294, 0.4117647058823529),
        vec3(0.44313725490196076, 0.3176470588235294, 0.3803921568627451),
        vec3(0.44313725490196076, 0.3176470588235294, 0.34901960784313724),
        vec3(0.44313725490196076, 0.3176470588235294, 0.3176470588235294),
        vec3(0.44313725490196076, 0.34901960784313724, 0.3176470588235294),
        vec3(0.44313725490196076, 0.3803921568627451, 0.3176470588235294),
        vec3(0.44313725490196076, 0.4117647058823529, 0.3176470588235294),
        vec3(0.44313725490196076, 0.44313725490196076, 0.3176470588235294),
        vec3(0.4117647058823529, 0.44313725490196076, 0.3176470588235294),
        vec3(0.3803921568627451, 0.44313725490196076, 0.3176470588235294),
        vec3(0.34901960784313724, 0.44313725490196076, 0.3176470588235294),
        vec3(0.3176470588235294, 0.44313725490196076, 0.3176470588235294),
        vec3(0.3176470588235294, 0.44313725490196076, 0.34901960784313724),
        vec3(0.3176470588235294, 0.44313725490196076, 0.3803921568627451),
        vec3(0.3176470588235294, 0.44313725490196076, 0.4117647058823529),
        vec3(0.3176470588235294, 0.44313725490196076, 0.44313725490196076),
        vec3(0.3176470588235294, 0.4117647058823529, 0.44313725490196076),
        vec3(0.3176470588235294, 0.3803921568627451, 0.44313725490196076),
        vec3(0.3176470588235294, 0.34901960784313724, 0.44313725490196076),
        vec3(0.0, 0.0, 0.2549019607843137),
        vec3(0.06274509803921569, 0.0, 0.2549019607843137),
        vec3(0.12549019607843137, 0.0, 0.2549019607843137),
        vec3(0.19215686274509805, 0.0, 0.2549019607843137),
        vec3(0.2549019607843137, 0.0, 0.2549019607843137),
        vec3(0.2549019607843137, 0.0, 0.19215686274509805),
        vec3(0.2549019607843137, 0.0, 0.12549019607843137),
        vec3(0.2549019607843137, 0.0, 0.06274509803921569),
        vec3(0.2549019607843137, 0.0, 0.0),
        vec3(0.2549019607843137, 0.06274509803921569, 0.0),
        vec3(0.2549019607843137, 0.12549019607843137, 0.0),
        vec3(0.2549019607843137, 0.19215686274509805, 0.0),
        vec3(0.2549019607843137, 0.2549019607843137, 0.0),
        vec3(0.19215686274509805, 0.2549019607843137, 0.0),
        vec3(0.12549019607843137, 0.2549019607843137, 0.0),
        vec3(0.06274509803921569, 0.2549019607843137, 0.0),
        vec3(0.0, 0.2549019607843137, 0.0),
        vec3(0.0, 0.2549019607843137, 0.06274509803921569),
        vec3(0.0, 0.2549019607843137, 0.12549019607843137),
        vec3(0.0, 0.2549019607843137, 0.19215686274509805),
        vec3(0.0, 0.2549019607843137, 0.2549019607843137),
        vec3(0.0, 0.19215686274509805, 0.2549019607843137),
        vec3(0.0, 0.12549019607843137, 0.2549019607843137),
        vec3(0.0, 0.06274509803921569, 0.2549019607843137),
        vec3(0.12549019607843137, 0.12549019607843137, 0.2549019607843137),
        vec3(0.1568627450980392, 0.12549019607843137, 0.2549019607843137),
        vec3(0.19215686274509805, 0.12549019607843137, 0.2549019607843137),
        vec3(0.2235294117647059, 0.12549019607843137, 0.2549019607843137),
        vec3(0.2549019607843137, 0.12549019607843137, 0.2549019607843137),
        vec3(0.2549019607843137, 0.12549019607843137, 0.2235294117647059),
        vec3(0.2549019607843137, 0.12549019607843137, 0.19215686274509805),
        vec3(0.2549019607843137, 0.12549019607843137, 0.1568627450980392),
        vec3(0.2549019607843137, 0.12549019607843137, 0.12549019607843137),
        vec3(0.2549019607843137, 0.1568627450980392, 0.12549019607843137),
        vec3(0.2549019607843137, 0.19215686274509805, 0.12549019607843137),
        vec3(0.2549019607843137, 0.2235294117647059, 0.12549019607843137),
        vec3(0.2549019607843137, 0.2549019607843137, 0.12549019607843137),
        vec3(0.2235294117647059, 0.2549019607843137, 0.12549019607843137),
        vec3(0.19215686274509805, 0.2549019607843137, 0.12549019607843137),
        vec3(0.1568627450980392, 0.2549019607843137, 0.12549019607843137),
        vec3(0.12549019607843137, 0.2549019607843137, 0.12549019607843137),
        vec3(0.12549019607843137, 0.2549019607843137, 0.1568627450980392),
        vec3(0.12549019607843137, 0.2549019607843137, 0.19215686274509805),
        vec3(0.12549019607843137, 0.2549019607843137, 0.2235294117647059),
        vec3(0.12549019607843137, 0.2549019607843137, 0.2549019607843137),
        vec3(0.12549019607843137, 0.2235294117647059, 0.2549019607843137),
        vec3(0.12549019607843137, 0.19215686274509805, 0.2549019607843137),
        vec3(0.12549019607843137, 0.1568627450980392, 0.2549019607843137),
        vec3(0.17647058823529413, 0.17647058823529413, 0.2549019607843137),
        vec3(0.19215686274509805, 0.17647058823529413, 0.2549019607843137),
        vec3(0.20784313725490197, 0.17647058823529413, 0.2549019607843137),
        vec3(0.23921568627450981, 0.17647058823529413, 0.2549019607843137),
        vec3(0.2549019607843137, 0.17647058823529413, 0.2549019607843137),
        vec3(0.2549019607843137, 0.17647058823529413, 0.23921568627450981),
        vec3(0.2549019607843137, 0.17647058823529413, 0.20784313725490197),
        vec3(0.2549019607843137, 0.17647058823529413, 0.19215686274509805),
        vec3(0.2549019607843137, 0.17647058823529413, 0.17647058823529413),
        vec3(0.2549019607843137, 0.19215686274509805, 0.17647058823529413),
        vec3(0.2549019607843137, 0.20784313725490197, 0.17647058823529413),
        vec3(0.2549019607843137, 0.23921568627450981, 0.17647058823529413),
        vec3(0.2549019607843137, 0.2549019607843137, 0.17647058823529413),
        vec3(0.23921568627450981, 0.2549019607843137, 0.17647058823529413),
        vec3(0.20784313725490197, 0.2549019607843137, 0.17647058823529413),
        vec3(0.19215686274509805, 0.2549019607843137, 0.17647058823529413),
        vec3(0.17647058823529413, 0.2549019607843137, 0.17647058823529413),
        vec3(0.17647058823529413, 0.2549019607843137, 0.19215686274509805),
        vec3(0.17647058823529413, 0.2549019607843137, 0.20784313725490197),
        vec3(0.17647058823529413, 0.2549019607843137, 0.23921568627450981),
        vec3(0.17647058823529413, 0.2549019607843137, 0.2549019607843137),
        vec3(0.17647058823529413, 0.23921568627450981, 0.2549019607843137),
        vec3(0.17647058823529413, 0.20784313725490197, 0.2549019607843137),
        vec3(0.17647058823529413, 0.19215686274509805, 0.2549019607843137),
        vec3(0.0, 0.0, 0.0),
        vec3(0.0, 0.0, 0.0),
        vec3(0.0, 0.0, 0.0),
        vec3(0.0, 0.0, 0.0),
        vec3(0.0, 0.0, 0.0),
        vec3(0.0, 0.0, 0.0),
        vec3(0.0, 0.0, 0.0),
        vec3(0.0, 0.0, 0.0)
    );

    // time and time fraction
    float t = iTime *5.0;
    float tf = t - float(int(t));

    // getting x and making it invariant to resolution, so width always = 512
    // getting y and keeping the aspect ratio x,y.
    // x and y are mod 256, so they are always between 0 and 255
    int x = int(fragCoord[0] * 512.0 / iResolution.x) % 256;
    int y = int((fragCoord[1] + iResolution.y/1.2) * 512.0 / iResolution.x) % 256;

    // This line determines the function in terms x and y
    int c = ((x*x | y*y) & (x ^ y) & (x*x + y*y)) + int(t);
    vec3 c1, c2;

    // This line determines the color of the pixel based on parity of c
    if(parity(c))
        c1 = (asm86palette[c % 256]);
    else{
        c1 = (vec3(0.0));
    }
    if(parity(c+1))
        c2 = (asm86palette[(c+1) % 256]);
    else{
        c2 = (vec3(0.0));
    }
    // interpolating between the two colors (to make transitons smooth)
    fragColor = vec4(c1 * (1.0-tf) + c2 * tf, 1.0);
}
